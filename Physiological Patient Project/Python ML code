import pandas as pd

df = pd.read_csv('./eicu_cohort.csv')
df.head()
df.info()

# rename some column names
df=df.rename( {"unabridgedhosplos":"length of stay",
          "meanbp": "mean blood pressure",
          "wbc": "white cell count"} )

#### Look for missing values
          

# convert boolean columns to a categorical type
df['actualhospitalmortality']  = pd.Categorical(df['actualhospitalmortality'], categories=['Alive','Expired'])    # 0 is Alive, 1 is Expired

# convert gender column to a categorical type
df['gender'] = pd.Categorical(df['gender'])
df['gender'] = df['gender'].cat.codes

# add the encoded value to a new column
df['actualhospitalmortality_enc'] = df['actualhospitalmortality'].cat.codes
df[['actualhospitalmortality_enc','actualhospitalmortality']].head()

############# Prepping Test and Data Sets
from sklearn.model_selection import train_test_split

x = df.drop('actualhospitalmortality', axis=1)
y = df['actualhospitalmortality']
x_train, x_test, y_train, y_test = train_test_split(x, y, train_size = 0.7, random_state = 42)

#############Checking for missing data
# We will use the training median to replace missing values in both the test and training data, this will avoid data leaking between the two sets

# impute missing values from the training set
x_train = x_train.fillna(x_train.median())
x_test = x_test.fillna(x_train.median())


############# Normalization
# there are several pre-built normilization programs\packages
#Min-Max Scaler (General normalization): Subtract mean, divide by standard deviation. from sklearn package which scales each feature between zero and one

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()                             # Set up scaler model

# Alternative is zero mean, unit variance
# from sklearn.preprocessing import StandardScaler

scaler.fit(x_train)                                 # apply\fit the scaler on the training dataset
x_train = scaler.transform(x_train)                 # scale the training set

x_test = scaler.transform(x_test)                   # scale the test set
